<Activity mc:Ignorable="sap sap2010" x:Class="X_Add_Watermark" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="WatermarkFile" Type="InArgument(x:String)" />
    <x:Property Name="InputFile" Type="InArgument(x:String)" />
    <x:Property Name="OutputFile" Type="InArgument(x:String)" />
    <x:Property Name="WatermarkPosition" Type="InArgument(sd:Point)" />
    <x:Property Name="InputFolder" Type="InArgument(x:String)" />
    <x:Property Name="OutputFolder" Type="InArgument(x:String)" />
  </x:Members>
  <this:X_Add_Watermark.WatermarkFile>
    <InArgument x:TypeArguments="x:String" />
  </this:X_Add_Watermark.WatermarkFile>
  <this:X_Add_Watermark.WatermarkPosition>
    <InArgument x:TypeArguments="sd:Point" />
  </this:X_Add_Watermark.WatermarkPosition>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1488,658</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>X_Add_Watermark_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="26">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="18">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Watermark" sap:VirtualizedContainerService.HintSize="400,397" sap2010:WorkflowViewState.IdRef="Sequence_4">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:Image" Name="Watermark" />
      <Variable x:TypeArguments="s:String[]" Default="[{&quot;.jpeg&quot;,&quot;.jpg&quot;,&quot;.png&quot;,&quot;.gif&quot;,&quot;.tiff&quot;,&quot;.tif&quot;}]" Name="Formats" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="If IsNothing(watermarkfile) Then &#xA;&#x9;console.WriteLine(&quot;Watermark Image File is required&quot;)&#xA;&#x9;Return&#xA;End If&#xA;&#xA;If Not System.io.File.Exists(WatermarkFile) Then &#xA;&#x9;console.WriteLine(&quot;Watermark File Not Found:L &quot; + watermarkfile)&#xA;&#x9;Return&#xA;End If&#xA;&#xA;Try&#xA;&#x9;watermark = system.Drawing.Image.FromFile(WaterMarkFile)&#xA;Catch ex As exception&#xA;&#x9;Console.WriteLine(&quot;Watermark File Access Error: &quot; + ex.Message)&#xA;Finally&#xA;&#x9;&#xA;End Try&#xA;&#xA;If IsNothing(watermark) Then Return&#xA;&#x9;&#xA;If isnothing(WaterMarkPosition) Then WatermarkPosition = New System.Drawing.Point(0,0)" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="338,61" sap2010:WorkflowViewState.IdRef="InvokeCode_7">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="WatermarkFile">[WatermarkFile]</InArgument>
        <InOutArgument x:TypeArguments="sd:Point" x:Key="WatermarkPosition">[WatermarkPosition]</InOutArgument>
        <OutArgument x:TypeArguments="sd:Image" x:Key="Watermark">[Watermark]</OutArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="If isnothing(Watermark) Then &#x9;Return&#xA;&#xA;Dim BoolMulti As Boolean&#xA;Dim InputFiles As String()&#xA;&#xA;If Not IsNothing(InputFile) AndAlso Not IsNothing(OutputFile) AndAlso system.io.file.Exists(InputFile) AndAlso system.io.path.IsPathRooted(OutputFile) AndAlso formats.Contains(system.io.path.GetExtension(Inputfile).ToLower)  AndAlso formats.Contains(system.io.path.GetExtension(Outputfile).ToLower) Then&#xA;&#x9;console.WriteLine(&quot;Watermarking File&quot;)&#xA;&#x9;InputFiles = {inputFile}&#xA; &#xA;Else &#xA;&#x9;&#x9;If Not IsNothing(InputFolder) AndAlso Not IsNothing(OutputFolder) AndAlso system.io.Directory.Exists(InputFolder) AndAlso system.io.Directory.Exists(OutputFolder) Then&#xA;&#x9;&#x9;&#x9;console.WriteLine(&quot;Watermarking Multiple Items&quot;)&#xA;&#x9;&#x9;&#x9;InputFiles = system.io.directory.getfiles(InputFolder)&#xA;&#x9;&#x9;&#x9;BoolMulti = True&#xA;&#x9;&#x9;Else &#xA;&#x9;&#x9;&#x9;console.WriteLine(&quot;Watermark Cancelled: &quot;+vbCrLf+&quot;Provide either (InputFile and OutputFile), or provide (Input Folder and OutputFolder)&quot;)&#xA;&#x9;&#x9;&#x9;Return&#xA;&#x9;&#x9;End If&#xA;End If&#xA;&#xA;&#xA;Dim img As system.Drawing.Image&#xA;Dim format As system.drawing.imaging.ImageFormat&#xA;Dim pb As system.windows.Forms.PictureBox = New system.Windows.Forms.PictureBox()&#xA;Dim ext As String&#xA;&#xA;For Each item As String In InputFiles&#xA;&#x9;' Open File&#xA;&#x9;Try&#xA;&#x9;&#x9;img = system.Drawing.Image.FromFile(item)&#xA;&#x9;Catch ex As Exception&#xA;&#x9;&#x9;console.WriteLine(&quot;File Access Error: &quot; + item)&#xA;&#x9;&#x9;Continue For&#xA;&#x9;Finally&#xA;&#x9;End Try&#xA;&#x9;&#xA;&#x9;' Set Format&#xA;&#x9;ext =  system.io.path.GetExtension(Item).ToLower&#xA;&#x9;Select Case ext&#xA;&#x9;&#x9;Case &quot;.jpeg&quot; &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Format =  system.drawing.imaging.ImageFormat.Jpeg&#xA;&#x9;&#x9;Case &quot;.jpg&quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Format =  system.drawing.imaging.ImageFormat.Jpeg&#xA;&#x9;&#x9;Case &quot;.png&quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Format =  system.drawing.imaging.ImageFormat.Png&#xA;&#x9;&#x9;Case &quot;.gif&quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Format =  system.drawing.imaging.ImageFormat.Gif&#xA;&#x9;&#x9;Case &quot;.tif&quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Format =  system.drawing.imaging.ImageFormat.Tiff&#xA;&#x9;&#x9;Case &quot;.tiff&quot;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Format =  system.drawing.imaging.ImageFormat.Tiff&#xA;&#x9;&#x9;Case Else&#xA;&#x9;&#x9;&#x9;Console.WriteLine(&quot;File Format Not Supported: &quot; + Item)&#xA;&#x9;&#x9;&#x9;Continue For&#xA;&#x9;End Select&#xA;&#x9;&#xA;&#x9;' Set PaintBox&#xA;&#x9;pb.image =  New Bitmap(img)&#xA;&#xA;&#x9;' Set Graphics&#xA;&#x9;Using g  As system.Drawing.Graphics = system.Drawing.Graphics.FromImage(pb.image) &#xA;&#x9;&#x9;' Add Watermark&#xA;&#x9;&#x9;g.DrawImage(Watermark, New System.Drawing.PointF(WatermarkPosition.X,WatermarkPosition.Y))&#xA;&#x9;End Using&#xA;&#x9;&#xA;&#x9;' Set File Name&#xA;&#x9;If boolMulti Then OutputFile = system.io.path.combine(OutputFolder,system.io.path.GetFileNameWithoutExtension(item))+ext&#xA;&#x9;&#xA;&#x9;'Save the image to disk&#xA;&#x9;Try&#xA;&#x9;&#x9;&#x9;pb.Image.Save(OutputFIle, Format)&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;Catch ex As Exception&#xA;&#x9;&#x9;&#x9;console.WriteLine(&quot;Can't Save File: &quot; + ex.Message + &quot; &quot; + OutputFile)&#xA;&#x9;Finally&#xA;&#x9;&#x9;&#x9;'Dispose Image&#xA;&#x9;&#x9;&#x9;img.Dispose()&#xA;&#x9;&#x9;&#x9;OutputFile = Nothing&#xA;&#x9;&#x9;&#x9;pb.Image = Nothing&#xA;&#x9;End Try&#xA;&#x9;&#xA;Next&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;&#xA;" DisplayName="Add Watermark" sap:VirtualizedContainerService.HintSize="338,174" sap2010:WorkflowViewState.IdRef="InvokeCode_8">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="sd:Point" x:Key="WatermarkPosition">[WatermarkPosition]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="WatermarkFile">[WatermarkFile]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="InputFile">[InputFile]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="OutputFile">[OutputFile]</InArgument>
        <InArgument x:TypeArguments="sd:Image" x:Key="Watermark">[Watermark]</InArgument>
        <InArgument x:TypeArguments="s:String[]" x:Key="formats">[Formats]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="InputFolder">[InputFolder]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="OutputFOlder">[OutputFolder]</InArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
  </Sequence>
</Activity>